document.addEventListener('DOMContentLoaded', function () {
  console.log('[FORM VALIDATION] script loaded');
  const RECAPTCHA_SITE_KEY = '6LdvbeQrAAAAAIPL3Fh7-GwonJTuruR67gGqHbPo';

  const form = document.querySelector('.contact__content');
  if (!form) {
    console.warn('[FORM VALIDATION] .contact__content not found');
    return;
  }

  // –∑–∞—â–∏—Ç–∞ –æ—Ç –¥–≤–æ–π–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  if (form.__handlerAttached) {
    console.log('[FORM VALIDATION] handler already attached');
    return;
  }
  form.__handlerAttached = true;

  const button = form.querySelector('.contact__btn');
  const phoneInput = form.querySelector('#phone') || form.querySelector('input[name="tel"]');

  form.addEventListener('submit', async function (e) {
    e.preventDefault();
    e.stopImmediatePropagation(); // –±–ª–æ–∫–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    console.log('[FORM VALIDATION] submit captured');

    // Honeypot ‚Äî –∑–∞—â–∏—Ç–∞ –æ—Ç –±–æ—Ç–æ–≤
    const gotcha = form.querySelector('input[name="_gotcha"]');
    if (gotcha && gotcha.value.trim() !== '') {
      console.warn('[FORM VALIDATION] Honeypot triggered ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã–π –±–æ—Ç');
      return;
    }

    if (!phoneInput) {
      alert('–ü–æ–ª–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –î–æ–±–∞–≤—å—Ç–µ id="phone" –∏–ª–∏ name="tel".');
      return;
    }

    // –ß–∏—Å—Ç–∏–º –Ω–æ–º–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    const raw = phoneInput.value.trim();
    const digits = raw.replace(/\D/g, ''); // –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
    console.log('[FORM VALIDATION] digits=', digits);

    if (!((digits.length === 10) || (digits.length === 11 && (digits[0] === '7' || digits[0] === '8')))) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX');
      phoneInput.focus();
      return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ü–µ–ª—å –≤ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫—É
    try {
      if (typeof ym === 'function') {
        ym(99960670, 'reachGoal', 'form_submit');
      }
    } catch (err) {
      console.warn('ym error', err);
    }

    // –ú–µ–Ω—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (button) {
      button.disabled = true;
      button.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
    }

    try {
      const data = new FormData(form);
       // üß© –í–°–¢–ê–í–õ–Ø–ï–ú reCAPTCHA –¢–£–¢ ‚Üì‚Üì‚Üì
       const token = await grecaptcha.execute(RECAPTCHA_SITE_KEY, { action: 'submit' });
       data.append('g-recaptcha-response', token);
       // üß© –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ reCAPTCHA
      const response = await fetch(form.action, {
        method: form.method || 'POST',
        body: data,
        headers: { Accept: 'application/json' }
      });

      console.log('[FORM VALIDATION] fetch status=', response.status);

      if (response.ok) {
        window.location.href = 'https://bezdolgov.netlify.app/spasibo.html';
      } else {
        const text = await response.text();
        console.error('[FORM VALIDATION] Formspree error', response.status, text);
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.');
      }
    } catch (err) {
      console.error('[FORM VALIDATION] Network error', err);
      alert('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      if (button) {
        button.disabled = false;
        button.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å';
      }
    }
  }, true); // capture = true
});
